name: build and test windows

on:
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:
  workflow_call:
    inputs:
      enabled:
        description: 'Enable the full Windows build (set false to upload placeholder)'
        required: false
        type: boolean
        default: true

permissions:
  contents: write

env:
  # True means perform actual Windows build; false means skip and upload placeholder
  ENABLED: ${{ inputs.enabled }}

jobs:
  windows_build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Skip build (placeholder artifact)
      if: env.ENABLED != 'true'
      run: |
        echo "Windows build disabled (ENABLED=${{ env.ENABLED }})"
        mkdir binaries
        echo "Windows build disabled" > binaries/WINDOWS_BUILD_WAS_DISABLED.txt
      shell: bash

    - name: Bump version in header (Windows)
      if: env.ENABLED == 'true'
      shell: pwsh
      run: |
        if ( "${{ github.event_name }}" -eq "pull_request" ){
          $version="${{ github.sha }}"
        }
        if ("${{ github.event_name }}" -eq "workflow_dispatch" ){
          $version="${{ github.sha }}"
        } 
        if ( ("${{github.event_name}}" -eq "push") -and ("${{github.ref_type}}" -eq "tag" )){
          $ref="${{ github.ref }}"
          $version=$ref.Split("/")[-1]
        }
        
        Write-Host "Setting version to $version"
        
        $path = "Cell2Fire\Cell2Fire.h"
        (Get-Content $path) -replace 'C2FW_VERSION\s*=\s*".*?"', "C2FW_VERSION = `"$version`"" | Set-Content $path
        
        Select-String 'C2FW_VERSION' $path

    - name: Cache Boost
      if: env.ENABLED == 'true'
      id: cache-boost
      uses: actions/cache@v4
      with:
        path: |
          Cell2Fire/include/boost_1_84_0
        key: boost-${{ runner.os }}-1.84.0
        restore-keys: |
          boost-${{ runner.os }}-

    - name: Cache Dirent
      if: env.ENABLED == 'true'
      id: cache-dirent
      uses: actions/cache@v4
      with:
        path: |
          Cell2Fire/include/dirent-1.25
        key: dirent-${{ runner.os }}-1.25
        restore-keys: |
          dirent-${{ runner.os }}-

    - name: Cache vcpkg
      if: env.ENABLED == 'true'
      id: cache-vcpkg
      uses: actions/cache@v4
      with:
        path: |
          Cell2Fire/include/vcpkg
        key: vcpkg-${{ runner.os }}-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          vcpkg-${{ runner.os }}-

    - name: Download dependencies
      if: env.ENABLED == 'true' && (steps.cache-vcpkg.outputs.cache-hit != 'true' || steps.cache-boost.outputs.cache-hit != 'true' || steps.cache-dirent.outputs.cache-hit != 'true')
      env:
        CACHE_BOOST: ${{ steps.cache-boost.outputs.cache-hit }}
        CACHE_DIRENT: ${{ steps.cache-dirent.outputs.cache-hit }}
        CACHE_VCPKG: ${{ steps.cache-vcpkg.outputs.cache-hit }}
      run: |
        cd Cell2Fire
        New-Item -ItemType Directory -Path "include" -Force

        Write-Host "Cache Boost: $CACHE_BOOST $($CACHE_BOOST -ne 'true')"
        Write-Host "Cache Boost: $CACHE_VCPKG $($CACHE_VCPKG -ne 'true')"

        # boost
        if ($CACHE_BOOST -ne 'true') {
          $fname = "boost_1_84_0.tar.gz"
          Invoke-WebRequest -Uri https://archives.boost.io/release/1.84.0/source/$fname -OutFile $fname
          tar -xzf $fname -C include
        } else {
          echo "Boost already cached"
        }

        # dirent
        if ($CACHE_DIRENT -ne 'true') {
          Invoke-WebRequest -Uri https://github.com/tronkko/dirent/archive/refs/tags/1.25.zip -OutFile dirent-1.25.zip
          Expand-Archive -Path .\dirent-1.25.zip -DestinationPath include
        } else {
          echo "Dirent already cached"
        }

        # tiffio
        if ($CACHE_VCPKG -ne 'true') {
          git clone https://github.com/microsoft/vcpkg.git include\vcpkg
        } else {
          echo "vcpkg already cached"
        }

    - name: Setup vcpkg
      if: env.ENABLED == 'true'
      run: |
        cd Cell2Fire\include\vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg integrate install
        .\vcpkg install tiff # --recurse --editable
        # Write-Host "Listing all files in installed\x64-windows:"
        # Get-ChildItem -Recurse installed\x64-windows | ForEach-Object { $_.FullName }

    - name: Cache Catch2 header
      if: env.ENABLED == 'true'
      uses: actions/cache@v4
      with:
        path: Cell2Fire\include\catch2\catch.hpp
        key: windows-catch2

    - name: Download Catch2 header
      if: env.ENABLED == 'true'
      run: |
        cd Cell2Fire
        if (!(Test-Path "include\catch2\catch.hpp")) {
          New-Item -ItemType Directory -Path "include\catch2" -Force
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/catchorg/Catch2/v2.x/single_include/catch2/catch.hpp" -OutFile "include\catch2\catch.hpp"
        }

    - name: Setup MSBuild
      if: env.ENABLED == 'true'
      uses: microsoft/setup-msbuild@v2

    - name: Build Solution
      if: env.ENABLED == 'true'
      run: |
        cd Cell2Fire
        msbuild Cell2Fire.sln /p:Configuration=Release

    - name: Run Unit Tests
      if: env.ENABLED == 'true'
      run: |
        & "Cell2Fire\x64\Release\WindowsTests.exe"
        $exitCode = $LASTEXITCODE
        exit $exitCode
      shell: pwsh

    - name: Run Regression Test
      if: env.ENABLED == 'true'
      run: |
        cd test
        ./test.ps1
      shell: pwsh

    - name: Gather output
      if: env.ENABLED == 'true'
      run: |
        mkdir binaries
        copy Cell2Fire\x64\Release\*.dll binaries
        copy Cell2Fire\x64\Release\Cell2Fire.exe binaries

    - name: Upload artifact (real or placeholder)
      uses: actions/upload-artifact@v4
      with:
        name: binaries-Windows-x86_64
        path: binaries
